/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controller.dao;

import co.edu.sena.model.dao.dto.*;
import co.edu.sena.controller.dao.exceptions.*;

public interface InstructorFichaDao
{
	/** 
	 * Inserts a new row in the instructor_ficha table.
	 */
	public InstructorFichaPk insert(InstructorFicha dto) throws InstructorFichaDaoException;

	/** 
	 * Updates a single row in the instructor_ficha table.
	 */
	public void update(InstructorFichaPk pk, InstructorFicha dto) throws InstructorFichaDaoException;

	/** 
	 * Deletes a single row in the instructor_ficha table.
	 */
	public void delete(InstructorFichaPk pk) throws InstructorFichaDaoException;

	/** 
	 * Returns the rows from the instructor_ficha table that matches the specified primary-key value.
	 */
	public InstructorFicha findByPrimaryKey(InstructorFichaPk pk) throws InstructorFichaDaoException;

	/** 
	 * Returns all rows from the instructor_ficha table that match the criteria 'tipo_documento = :tipoDocumento AND numero_documento = :numeroDocumento AND ficha = :ficha'.
	 */
	public InstructorFicha findByPrimaryKey(String tipoDocumento, String numeroDocumento, String ficha) throws InstructorFichaDaoException;

	/** 
	 * Returns all rows from the instructor_ficha table that match the criteria ''.
	 */
	public InstructorFicha[] findAll() throws InstructorFichaDaoException;

	/** 
	 * Returns all rows from the instructor_ficha table that match the criteria 'tipo_documento = :tipoDocumento AND numero_documento = :numeroDocumento'.
	 */
	public InstructorFicha[] findByCliente(String tipoDocumento, String numeroDocumento) throws InstructorFichaDaoException;

	/** 
	 * Returns all rows from the instructor_ficha table that match the criteria 'ficha = :ficha'.
	 */
	public InstructorFicha[] findByFicha(String ficha) throws InstructorFichaDaoException;

	/** 
	 * Returns all rows from the instructor_ficha table that match the criteria 'tipo_documento = :tipoDocumento'.
	 */
	public InstructorFicha[] findWhereTipoDocumentoEquals(String tipoDocumento) throws InstructorFichaDaoException;

	/** 
	 * Returns all rows from the instructor_ficha table that match the criteria 'numero_documento = :numeroDocumento'.
	 */
	public InstructorFicha[] findWhereNumeroDocumentoEquals(String numeroDocumento) throws InstructorFichaDaoException;

	/** 
	 * Returns all rows from the instructor_ficha table that match the criteria 'ficha = :ficha'.
	 */
	public InstructorFicha[] findWhereFichaEquals(String ficha) throws InstructorFichaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the instructor_ficha table that match the specified arbitrary SQL statement
	 */
	public InstructorFicha[] findByDynamicSelect(String sql, Object[] sqlParams) throws InstructorFichaDaoException;

	/** 
	 * Returns all rows from the instructor_ficha table that match the specified arbitrary SQL statement
	 */
	public InstructorFicha[] findByDynamicWhere(String sql, Object[] sqlParams) throws InstructorFichaDaoException;

}
