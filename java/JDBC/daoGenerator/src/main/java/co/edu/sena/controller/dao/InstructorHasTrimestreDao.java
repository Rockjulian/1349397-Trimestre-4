/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controller.dao;

import co.edu.sena.model.dao.dto.*;
import co.edu.sena.controller.dao.exceptions.*;

public interface InstructorHasTrimestreDao
{
	/** 
	 * Inserts a new row in the instructor_has_trimestre table.
	 */
	public InstructorHasTrimestrePk insert(InstructorHasTrimestre dto) throws InstructorHasTrimestreDaoException;

	/** 
	 * Updates a single row in the instructor_has_trimestre table.
	 */
	public void update(InstructorHasTrimestrePk pk, InstructorHasTrimestre dto) throws InstructorHasTrimestreDaoException;

	/** 
	 * Deletes a single row in the instructor_has_trimestre table.
	 */
	public void delete(InstructorHasTrimestrePk pk) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns the rows from the instructor_has_trimestre table that matches the specified primary-key value.
	 */
	public InstructorHasTrimestre findByPrimaryKey(InstructorHasTrimestrePk pk) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria 'tipo_documento = :tipoDocumento AND numero_documento = :numeroDocumento AND ficha = :ficha AND id_trimestre = :idTrimestre AND jornada = :jornada AND tipo_instructor = :tipoInstructor'.
	 */
	public InstructorHasTrimestre findByPrimaryKey(String tipoDocumento, String numeroDocumento, String ficha, String idTrimestre, String jornada, String tipoInstructor) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria ''.
	 */
	public InstructorHasTrimestre[] findAll() throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria 'tipo_documento = :tipoDocumento AND numero_documento = :numeroDocumento AND ficha = :ficha'.
	 */
	public InstructorHasTrimestre[] findByInstructorFicha(String tipoDocumento, String numeroDocumento, String ficha) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria 'tipo_instructor = :tipoInstructor'.
	 */
	public InstructorHasTrimestre[] findByTipoInstructor(String tipoInstructor) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria 'id_trimestre = :idTrimestre AND jornada = :jornada'.
	 */
	public InstructorHasTrimestre[] findByTrimestre(String idTrimestre, String jornada) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria 'tipo_documento = :tipoDocumento'.
	 */
	public InstructorHasTrimestre[] findWhereTipoDocumentoEquals(String tipoDocumento) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria 'numero_documento = :numeroDocumento'.
	 */
	public InstructorHasTrimestre[] findWhereNumeroDocumentoEquals(String numeroDocumento) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria 'ficha = :ficha'.
	 */
	public InstructorHasTrimestre[] findWhereFichaEquals(String ficha) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria 'id_trimestre = :idTrimestre'.
	 */
	public InstructorHasTrimestre[] findWhereIdTrimestreEquals(String idTrimestre) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria 'jornada = :jornada'.
	 */
	public InstructorHasTrimestre[] findWhereJornadaEquals(String jornada) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the criteria 'tipo_instructor = :tipoInstructor'.
	 */
	public InstructorHasTrimestre[] findWhereTipoInstructorEquals(String tipoInstructor) throws InstructorHasTrimestreDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the specified arbitrary SQL statement
	 */
	public InstructorHasTrimestre[] findByDynamicSelect(String sql, Object[] sqlParams) throws InstructorHasTrimestreDaoException;

	/** 
	 * Returns all rows from the instructor_has_trimestre table that match the specified arbitrary SQL statement
	 */
	public InstructorHasTrimestre[] findByDynamicWhere(String sql, Object[] sqlParams) throws InstructorHasTrimestreDaoException;

}
