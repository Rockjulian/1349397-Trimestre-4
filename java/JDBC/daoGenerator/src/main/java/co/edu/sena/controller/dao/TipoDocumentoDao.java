/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controller.dao;

import co.edu.sena.model.dao.dto.*;
import co.edu.sena.controller.dao.exceptions.*;

public interface TipoDocumentoDao
{
	/** 
	 * Inserts a new row in the tipo_documento table.
	 */
	public TipoDocumentoPk insert(TipoDocumento dto) throws TipoDocumentoDaoException;

	/** 
	 * Updates a single row in the tipo_documento table.
	 */
	public void update(TipoDocumentoPk pk, TipoDocumento dto) throws TipoDocumentoDaoException;

	/** 
	 * Deletes a single row in the tipo_documento table.
	 */
	public void delete(TipoDocumentoPk pk) throws TipoDocumentoDaoException;

	/** 
	 * Returns the rows from the tipo_documento table that matches the specified primary-key value.
	 */
	public TipoDocumento findByPrimaryKey(TipoDocumentoPk pk) throws TipoDocumentoDaoException;

	/** 
	 * Returns all rows from the tipo_documento table that match the criteria 'documento = :documento'.
	 */
	public TipoDocumento findByPrimaryKey(String documento) throws TipoDocumentoDaoException;

	/** 
	 * Returns all rows from the tipo_documento table that match the criteria ''.
	 */
	public TipoDocumento[] findAll() throws TipoDocumentoDaoException;

	/** 
	 * Returns all rows from the tipo_documento table that match the criteria 'documento = :documento'.
	 */
	public TipoDocumento[] findWhereDocumentoEquals(String documento) throws TipoDocumentoDaoException;

	/** 
	 * Returns all rows from the tipo_documento table that match the criteria 'descripcion = :descripcion'.
	 */
	public TipoDocumento[] findWhereDescripcionEquals(String descripcion) throws TipoDocumentoDaoException;

	/** 
	 * Returns all rows from the tipo_documento table that match the criteria 'estado = :estado'.
	 */
	public TipoDocumento[] findWhereEstadoEquals(short estado) throws TipoDocumentoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the tipo_documento table that match the specified arbitrary SQL statement
	 */
	public TipoDocumento[] findByDynamicSelect(String sql, Object[] sqlParams) throws TipoDocumentoDaoException;

	/** 
	 * Returns all rows from the tipo_documento table that match the specified arbitrary SQL statement
	 */
	public TipoDocumento[] findByDynamicWhere(String sql, Object[] sqlParams) throws TipoDocumentoDaoException;

}
