/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controller.dao;

import co.edu.sena.model.dao.dto.*;
import co.edu.sena.controller.dao.exceptions.*;

public interface EstadoFormacionDao
{
	/** 
	 * Inserts a new row in the estado_formacion table.
	 */
	public EstadoFormacionPk insert(EstadoFormacion dto) throws EstadoFormacionDaoException;

	/** 
	 * Updates a single row in the estado_formacion table.
	 */
	public void update(EstadoFormacionPk pk, EstadoFormacion dto) throws EstadoFormacionDaoException;

	/** 
	 * Deletes a single row in the estado_formacion table.
	 */
	public void delete(EstadoFormacionPk pk) throws EstadoFormacionDaoException;

	/** 
	 * Returns the rows from the estado_formacion table that matches the specified primary-key value.
	 */
	public EstadoFormacion findByPrimaryKey(EstadoFormacionPk pk) throws EstadoFormacionDaoException;

	/** 
	 * Returns all rows from the estado_formacion table that match the criteria 'id_estado = :idEstado'.
	 */
	public EstadoFormacion findByPrimaryKey(String idEstado) throws EstadoFormacionDaoException;

	/** 
	 * Returns all rows from the estado_formacion table that match the criteria ''.
	 */
	public EstadoFormacion[] findAll() throws EstadoFormacionDaoException;

	/** 
	 * Returns all rows from the estado_formacion table that match the criteria 'id_estado = :idEstado'.
	 */
	public EstadoFormacion[] findWhereIdEstadoEquals(String idEstado) throws EstadoFormacionDaoException;

	/** 
	 * Returns all rows from the estado_formacion table that match the criteria 'estado = :estado'.
	 */
	public EstadoFormacion[] findWhereEstadoEquals(short estado) throws EstadoFormacionDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the estado_formacion table that match the specified arbitrary SQL statement
	 */
	public EstadoFormacion[] findByDynamicSelect(String sql, Object[] sqlParams) throws EstadoFormacionDaoException;

	/** 
	 * Returns all rows from the estado_formacion table that match the specified arbitrary SQL statement
	 */
	public EstadoFormacion[] findByDynamicWhere(String sql, Object[] sqlParams) throws EstadoFormacionDaoException;

}
