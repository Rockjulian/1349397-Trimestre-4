/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controller.dao;

import java.util.Date;
import co.edu.sena.model.dao.dto.*;
import co.edu.sena.controller.dao.exceptions.*;

public interface RespuestaGrupoDao
{
	/** 
	 * Inserts a new row in the respuesta_grupo table.
	 */
	public RespuestaGrupoPk insert(RespuestaGrupo dto) throws RespuestaGrupoDaoException;

	/** 
	 * Updates a single row in the respuesta_grupo table.
	 */
	public void update(RespuestaGrupoPk pk, RespuestaGrupo dto) throws RespuestaGrupoDaoException;

	/** 
	 * Deletes a single row in the respuesta_grupo table.
	 */
	public void delete(RespuestaGrupoPk pk) throws RespuestaGrupoDaoException;

	/** 
	 * Returns the rows from the respuesta_grupo table that matches the specified primary-key value.
	 */
	public RespuestaGrupo findByPrimaryKey(RespuestaGrupoPk pk) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria 'ficha = :ficha AND grupo_codigo = :grupoCodigo AND lista_chequeo = :listaChequeo AND id_item = :idItem'.
	 */
	public RespuestaGrupo findByPrimaryKey(String ficha, int grupoCodigo, String listaChequeo, int idItem) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria ''.
	 */
	public RespuestaGrupo[] findAll() throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria 'ficha = :ficha AND grupo_codigo = :grupoCodigo'.
	 */
	public RespuestaGrupo[] findByGrupoProyecto(String ficha, int grupoCodigo) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria 'lista_chequeo = :listaChequeo AND id_item = :idItem'.
	 */
	public RespuestaGrupo[] findByItemChecker(String listaChequeo, int idItem) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria 'valoracion_valor = :valoracionValor'.
	 */
	public RespuestaGrupo[] findByValoracion(String valoracionValor) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria 'ficha = :ficha'.
	 */
	public RespuestaGrupo[] findWhereFichaEquals(String ficha) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria 'grupo_codigo = :grupoCodigo'.
	 */
	public RespuestaGrupo[] findWhereGrupoCodigoEquals(int grupoCodigo) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria 'lista_chequeo = :listaChequeo'.
	 */
	public RespuestaGrupo[] findWhereListaChequeoEquals(String listaChequeo) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria 'id_item = :idItem'.
	 */
	public RespuestaGrupo[] findWhereIdItemEquals(int idItem) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria 'valoracion_valor = :valoracionValor'.
	 */
	public RespuestaGrupo[] findWhereValoracionValorEquals(String valoracionValor) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the criteria 'fecha = :fecha'.
	 */
	public RespuestaGrupo[] findWhereFechaEquals(Date fecha) throws RespuestaGrupoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the respuesta_grupo table that match the specified arbitrary SQL statement
	 */
	public RespuestaGrupo[] findByDynamicSelect(String sql, Object[] sqlParams) throws RespuestaGrupoDaoException;

	/** 
	 * Returns all rows from the respuesta_grupo table that match the specified arbitrary SQL statement
	 */
	public RespuestaGrupo[] findByDynamicWhere(String sql, Object[] sqlParams) throws RespuestaGrupoDaoException;

}
