/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.pruebas;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.controller.dao.TipoInstructorDao;
import co.edu.sena.model.dao.dto.TipoInstructor;
import co.edu.sena.controller.dao.exceptions.TipoInstructorDaoException;
import co.edu.sena.controller.factory.TipoInstructorDaoFactory;

public class TipoInstructorDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWhereModalidadEquals("");
		// findWhereEstadoEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			TipoInstructorDao _dao = getTipoInstructorDao();
			TipoInstructor _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereModalidadEquals'
	 * 
	 * @param modalidad
	 */
	public static void findWhereModalidadEquals(String modalidad)
	{
		try {
			TipoInstructorDao _dao = getTipoInstructorDao();
			TipoInstructor _result[] = _dao.findWhereModalidadEquals(modalidad);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereEstadoEquals'
	 * 
	 * @param estado
	 */
	public static void findWhereEstadoEquals(short estado)
	{
		try {
			TipoInstructorDao _dao = getTipoInstructorDao();
			TipoInstructor _result[] = _dao.findWhereEstadoEquals(estado);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getTipoInstructorDao'
	 * 
	 * @return TipoInstructorDao
	 */
	public static TipoInstructorDao getTipoInstructorDao()
	{
		return TipoInstructorDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(TipoInstructor dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getModalidad() );
		buf.append( ", " );
		buf.append( dto.getEstado() );
		System.out.println( buf.toString() );
	}

}
