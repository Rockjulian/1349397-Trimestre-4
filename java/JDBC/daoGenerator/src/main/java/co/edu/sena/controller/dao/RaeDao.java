/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controller.dao;

import co.edu.sena.model.dao.dto.*;
import co.edu.sena.controller.dao.exceptions.*;

public interface RaeDao
{
	/** 
	 * Inserts a new row in the rae table.
	 */
	public RaePk insert(Rae dto) throws RaeDaoException;

	/** 
	 * Updates a single row in the rae table.
	 */
	public void update(RaePk pk, Rae dto) throws RaeDaoException;

	/** 
	 * Deletes a single row in the rae table.
	 */
	public void delete(RaePk pk) throws RaeDaoException;

	/** 
	 * Returns the rows from the rae table that matches the specified primary-key value.
	 */
	public Rae findByPrimaryKey(RaePk pk) throws RaeDaoException;

	/** 
	 * Returns all rows from the rae table that match the criteria 'codigo = :codigo AND competencia_codigo = :competenciaCodigo AND programa_codigo_version = :programaCodigoVersion'.
	 */
	public Rae findByPrimaryKey(String codigo, String competenciaCodigo, String programaCodigoVersion) throws RaeDaoException;

	/** 
	 * Returns all rows from the rae table that match the criteria ''.
	 */
	public Rae[] findAll() throws RaeDaoException;

	/** 
	 * Returns all rows from the rae table that match the criteria 'competencia_codigo = :competenciaCodigo AND programa_codigo_version = :programaCodigoVersion'.
	 */
	public Rae[] findByCompetencia(String competenciaCodigo, String programaCodigoVersion) throws RaeDaoException;

	/** 
	 * Returns all rows from the rae table that match the criteria 'codigo = :codigo'.
	 */
	public Rae[] findWhereCodigoEquals(String codigo) throws RaeDaoException;

	/** 
	 * Returns all rows from the rae table that match the criteria 'denominacion = :denominacion'.
	 */
	public Rae[] findWhereDenominacionEquals(String denominacion) throws RaeDaoException;

	/** 
	 * Returns all rows from the rae table that match the criteria 'competencia_codigo = :competenciaCodigo'.
	 */
	public Rae[] findWhereCompetenciaCodigoEquals(String competenciaCodigo) throws RaeDaoException;

	/** 
	 * Returns all rows from the rae table that match the criteria 'programa_codigo_version = :programaCodigoVersion'.
	 */
	public Rae[] findWhereProgramaCodigoVersionEquals(String programaCodigoVersion) throws RaeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the rae table that match the specified arbitrary SQL statement
	 */
	public Rae[] findByDynamicSelect(String sql, Object[] sqlParams) throws RaeDaoException;

	/** 
	 * Returns all rows from the rae table that match the specified arbitrary SQL statement
	 */
	public Rae[] findByDynamicWhere(String sql, Object[] sqlParams) throws RaeDaoException;

}
