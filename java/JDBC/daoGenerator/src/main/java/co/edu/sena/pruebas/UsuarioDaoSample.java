/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.pruebas;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.controller.dao.UsuarioDao;
import co.edu.sena.model.dao.dto.Usuario;
import co.edu.sena.controller.dao.exceptions.UsuarioDaoException;
import co.edu.sena.controller.factory.UsuarioDaoFactory;

public class UsuarioDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByCliente("", "");
		// findWhereTipoDocumentoEquals("");
		// findWhereNumeroDocumentoEquals("");
		// findWhereCorreoEquals("");
		// findWhereContraseniaEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			UsuarioDao _dao = getUsuarioDao();
			Usuario _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByCliente'
	 * 
	 * @param tipoDocumento
	 * @param numeroDocumento
	 */
	public static void findByCliente(String tipoDocumento, String numeroDocumento)
	{
		try {
			UsuarioDao _dao = getUsuarioDao();
			Usuario _result[] = _dao.findByCliente(tipoDocumento, numeroDocumento);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTipoDocumentoEquals'
	 * 
	 * @param tipoDocumento
	 */
	public static void findWhereTipoDocumentoEquals(String tipoDocumento)
	{
		try {
			UsuarioDao _dao = getUsuarioDao();
			Usuario _result[] = _dao.findWhereTipoDocumentoEquals(tipoDocumento);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNumeroDocumentoEquals'
	 * 
	 * @param numeroDocumento
	 */
	public static void findWhereNumeroDocumentoEquals(String numeroDocumento)
	{
		try {
			UsuarioDao _dao = getUsuarioDao();
			Usuario _result[] = _dao.findWhereNumeroDocumentoEquals(numeroDocumento);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCorreoEquals'
	 * 
	 * @param correo
	 */
	public static void findWhereCorreoEquals(String correo)
	{
		try {
			UsuarioDao _dao = getUsuarioDao();
			Usuario _result[] = _dao.findWhereCorreoEquals(correo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereContraseniaEquals'
	 * 
	 * @param contrasenia
	 */
	public static void findWhereContraseniaEquals(String contrasenia)
	{
		try {
			UsuarioDao _dao = getUsuarioDao();
			Usuario _result[] = _dao.findWhereContraseniaEquals(contrasenia);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getUsuarioDao'
	 * 
	 * @return UsuarioDao
	 */
	public static UsuarioDao getUsuarioDao()
	{
		return UsuarioDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Usuario dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getTipoDocumento() );
		buf.append( ", " );
		buf.append( dto.getNumeroDocumento() );
		buf.append( ", " );
		buf.append( dto.getCorreo() );
		buf.append( ", " );
		buf.append( dto.getContrasenia() );
		System.out.println( buf.toString() );
	}

}
