/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.pruebas;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import co.edu.sena.controller.dao.RaeDao;
import co.edu.sena.model.dao.dto.Rae;
import co.edu.sena.controller.dao.exceptions.RaeDaoException;
import co.edu.sena.controller.factory.RaeDaoFactory;

public class RaeDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByCompetencia("", "");
		// findWhereCodigoEquals("");
		// findWhereDenominacionEquals("");
		// findWhereCompetenciaCodigoEquals("");
		// findWhereProgramaCodigoVersionEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			RaeDao _dao = getRaeDao();
			Rae _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByCompetencia'
	 * 
	 * @param competenciaCodigo
	 * @param programaCodigoVersion
	 */
	public static void findByCompetencia(String competenciaCodigo, String programaCodigoVersion)
	{
		try {
			RaeDao _dao = getRaeDao();
			Rae _result[] = _dao.findByCompetencia(competenciaCodigo, programaCodigoVersion);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCodigoEquals'
	 * 
	 * @param codigo
	 */
	public static void findWhereCodigoEquals(String codigo)
	{
		try {
			RaeDao _dao = getRaeDao();
			Rae _result[] = _dao.findWhereCodigoEquals(codigo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDenominacionEquals'
	 * 
	 * @param denominacion
	 */
	public static void findWhereDenominacionEquals(String denominacion)
	{
		try {
			RaeDao _dao = getRaeDao();
			Rae _result[] = _dao.findWhereDenominacionEquals(denominacion);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCompetenciaCodigoEquals'
	 * 
	 * @param competenciaCodigo
	 */
	public static void findWhereCompetenciaCodigoEquals(String competenciaCodigo)
	{
		try {
			RaeDao _dao = getRaeDao();
			Rae _result[] = _dao.findWhereCompetenciaCodigoEquals(competenciaCodigo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProgramaCodigoVersionEquals'
	 * 
	 * @param programaCodigoVersion
	 */
	public static void findWhereProgramaCodigoVersionEquals(String programaCodigoVersion)
	{
		try {
			RaeDao _dao = getRaeDao();
			Rae _result[] = _dao.findWhereProgramaCodigoVersionEquals(programaCodigoVersion);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getRaeDao'
	 * 
	 * @return RaeDao
	 */
	public static RaeDao getRaeDao()
	{
		return RaeDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Rae dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getCodigo() );
		buf.append( ", " );
		buf.append( dto.getDenominacion() );
		buf.append( ", " );
		buf.append( dto.getCompetenciaCodigo() );
		buf.append( ", " );
		buf.append( dto.getProgramaCodigoVersion() );
		System.out.println( buf.toString() );
	}

}
