/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controller.dao;

import co.edu.sena.model.dao.dto.*;
import co.edu.sena.controller.dao.exceptions.*;

public interface RaeHasTrimestreDao
{
	/** 
	 * Inserts a new row in the rae_has_trimestre table.
	 */
	public RaeHasTrimestrePk insert(RaeHasTrimestre dto) throws RaeHasTrimestreDaoException;

	/** 
	 * Updates a single row in the rae_has_trimestre table.
	 */
	public void update(RaeHasTrimestrePk pk, RaeHasTrimestre dto) throws RaeHasTrimestreDaoException;

	/** 
	 * Deletes a single row in the rae_has_trimestre table.
	 */
	public void delete(RaeHasTrimestrePk pk) throws RaeHasTrimestreDaoException;

	/** 
	 * Returns the rows from the rae_has_trimestre table that matches the specified primary-key value.
	 */
	public RaeHasTrimestre findByPrimaryKey(RaeHasTrimestrePk pk) throws RaeHasTrimestreDaoException;

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the criteria 'rae_codigo = :raeCodigo AND competencia_codigo = :competenciaCodigo AND programa_codigo_version = :programaCodigoVersion AND id_trimestre = :idTrimestre AND jornada = :jornada'.
	 */
	public RaeHasTrimestre findByPrimaryKey(String raeCodigo, String competenciaCodigo, String programaCodigoVersion, String idTrimestre, String jornada) throws RaeHasTrimestreDaoException;

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the criteria ''.
	 */
	public RaeHasTrimestre[] findAll() throws RaeHasTrimestreDaoException;

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the criteria 'rae_codigo = :raeCodigo AND competencia_codigo = :competenciaCodigo AND programa_codigo_version = :programaCodigoVersion'.
	 */
	public RaeHasTrimestre[] findByRae(String raeCodigo, String competenciaCodigo, String programaCodigoVersion) throws RaeHasTrimestreDaoException;

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the criteria 'id_trimestre = :idTrimestre AND jornada = :jornada'.
	 */
	public RaeHasTrimestre[] findByTrimestre(String idTrimestre, String jornada) throws RaeHasTrimestreDaoException;

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the criteria 'rae_codigo = :raeCodigo'.
	 */
	public RaeHasTrimestre[] findWhereRaeCodigoEquals(String raeCodigo) throws RaeHasTrimestreDaoException;

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the criteria 'competencia_codigo = :competenciaCodigo'.
	 */
	public RaeHasTrimestre[] findWhereCompetenciaCodigoEquals(String competenciaCodigo) throws RaeHasTrimestreDaoException;

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the criteria 'programa_codigo_version = :programaCodigoVersion'.
	 */
	public RaeHasTrimestre[] findWhereProgramaCodigoVersionEquals(String programaCodigoVersion) throws RaeHasTrimestreDaoException;

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the criteria 'id_trimestre = :idTrimestre'.
	 */
	public RaeHasTrimestre[] findWhereIdTrimestreEquals(String idTrimestre) throws RaeHasTrimestreDaoException;

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the criteria 'jornada = :jornada'.
	 */
	public RaeHasTrimestre[] findWhereJornadaEquals(String jornada) throws RaeHasTrimestreDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the specified arbitrary SQL statement
	 */
	public RaeHasTrimestre[] findByDynamicSelect(String sql, Object[] sqlParams) throws RaeHasTrimestreDaoException;

	/** 
	 * Returns all rows from the rae_has_trimestre table that match the specified arbitrary SQL statement
	 */
	public RaeHasTrimestre[] findByDynamicWhere(String sql, Object[] sqlParams) throws RaeHasTrimestreDaoException;

}
