/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package co.edu.sena.controller.dao;

import co.edu.sena.model.dao.dto.*;
import co.edu.sena.controller.dao.exceptions.*;

public interface JornadaDao
{
	/** 
	 * Inserts a new row in the jornada table.
	 */
	public JornadaPk insert(Jornada dto) throws JornadaDaoException;

	/** 
	 * Updates a single row in the jornada table.
	 */
	public void update(JornadaPk pk, Jornada dto) throws JornadaDaoException;

	/** 
	 * Deletes a single row in the jornada table.
	 */
	public void delete(JornadaPk pk) throws JornadaDaoException;

	/** 
	 * Returns the rows from the jornada table that matches the specified primary-key value.
	 */
	public Jornada findByPrimaryKey(JornadaPk pk) throws JornadaDaoException;

	/** 
	 * Returns all rows from the jornada table that match the criteria 'nombre = :nombre'.
	 */
	public Jornada findByPrimaryKey(String nombre) throws JornadaDaoException;

	/** 
	 * Returns all rows from the jornada table that match the criteria ''.
	 */
	public Jornada[] findAll() throws JornadaDaoException;

	/** 
	 * Returns all rows from the jornada table that match the criteria 'nombre = :nombre'.
	 */
	public Jornada[] findWhereNombreEquals(String nombre) throws JornadaDaoException;

	/** 
	 * Returns all rows from the jornada table that match the criteria 'estado = :estado'.
	 */
	public Jornada[] findWhereEstadoEquals(short estado) throws JornadaDaoException;

	/** 
	 * Returns all rows from the jornada table that match the criteria 'descripcion = :descripcion'.
	 */
	public Jornada[] findWhereDescripcionEquals(String descripcion) throws JornadaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the jornada table that match the specified arbitrary SQL statement
	 */
	public Jornada[] findByDynamicSelect(String sql, Object[] sqlParams) throws JornadaDaoException;

	/** 
	 * Returns all rows from the jornada table that match the specified arbitrary SQL statement
	 */
	public Jornada[] findByDynamicWhere(String sql, Object[] sqlParams) throws JornadaDaoException;

}
